
FYI : For examples refer the example html file

Empty HTML Elements :

    Empty elements (also called self-closing or void elements) are not container tags —
that means, you can not write

        <hr>some content</hr> or <br>some content</br>.

    A typical example of an empty element, is the <br> element, which represents a line break.

        <p>This paragraph contains <br> a line break.</p>

Nested HTML Elements :

    Most HTML elements can contain any number of further elements, which are, in turn,
made up of tags, attributes, and content or other elements.

        <p class="example">Here is some <em> emphasized </em> text.</p>

HTML Attributes :

    Attributes define additional properties of an element.

        <div class="example">...</div>
        <a href="https://www.google.com">Google</a>

        eg: id, style, hidden, bgcolor

    Custom Attributes
        A new feature being introduced in HTML 5 is the addition of custom data attributes.

        A custom data attribute starts with data- and would be named based on your requirement.
        Following is the simple example −

        <div class="example" data-subject="physics" data-level="complex">
           ...
        </div>

HTML Events :

    User do things like click on text and images and given links, hover over things etc. These
    are examples of what JavaScript calls events.

    Window Events : onload - script - Fires when the document has finished loading.
    Mouse Event : onclick  - script - Fires when the user clicks the left mouse button on the element.
    Form Events : onselect - script - Fires when some text is being selected or the current selection is changed by the user.

        offline -->	script -->	Triggers when the document goes offline
        onabort -->	script -->	Triggers on an abort event
        onafterprint -->	script -->	Triggers after the document is printed
        onbeforeonload -->	script -->	Triggers before the document loads
        onbeforeprint -->	script -->	Triggers before the document is printed
        onblur -->	script -->	Triggers when the window loses focus
        oncanplay -->	script -->	Triggers when media can start play, but might has to stop for buffering
        oncanplaythrough -->	script -->	Triggers when media can be played to the end, without stopping for buffering
        onchange -->	script -->	Triggers when an element changes
        onclick -->	script -->	Triggers on a mouse click
        oncontextmenu -->	script -->	Triggers when a context menu is triggered
        ondblclick -->	script -->	Triggers on a mouse double-click
        ondrag -->	script -->	Triggers when an element is dragged
        ondragend -->	script -->	Triggers at the end of a drag operation
        ondragenter -->	script -->	Triggers when an element has been dragged to a valid drop target
        ondragleave -->	script -->	Triggers when an element is being dragged over a valid drop target
        ondragover -->	script -->	Triggers at the start of a drag operation
        ondragstart -->	script -->	Triggers at the start of a drag operation
        ondrop -->	script -->	Triggers when dragged element is being dropped
        ondurationchange -->	script -->	Triggers when the length of the media is changed
        onemptied -->	script -->	Triggers when a media resource element suddenly becomes empty.
        onended -->	script -->	Triggers when media has reach the end
        onerror -->	script -->	Triggers when an error occur
        onfocus -->	script -->	Triggers when the window gets focus
        onformchange -->	script -->	Triggers when a form changes
        onforminput -->	script -->	Triggers when a form gets user input
        onhaschange -->	script -->	Triggers when the document has change
        oninput -->	script -->	Triggers when an element gets user input
        oninvalid -->	script -->	Triggers when an element is invalid
        onkeydown -->	script -->	Triggers when a key is pressed
        onkeypress -->	script -->	Triggers when a key is pressed and released
        onkeyup -->	script -->	Triggers when a key is released
        onload -->	script -->	Triggers when the document loads
        onloadeddata -->	script -->	Triggers when media data is loaded
        onloadedmetadata -->	script -->	Triggers when the duration and other media data of a media element is loaded
        onloadstart -->	script -->	Triggers when the browser starts to load the media data
        onmessage -->	script -->	Triggers when the message is triggered
        onmousedown -->	script -->	Triggers when a mouse button is pressed
        onmousemove -->	script -->	Triggers when the mouse pointer moves
        onmouseout -->	script -->	Triggers when the mouse pointer moves out of an element
        onmouseover -->	script -->	Triggers when the mouse pointer moves over an element
        onmouseup -->	script -->	Triggers when a mouse button is released
        onmousewheel -->	script -->	Triggers when the mouse wheel is being rotated
        onoffline -->	script -->	Triggers when the document goes offline
        onoine -->	script -->	Triggers when the document comes online
        ononline -->	script -->	Triggers when the document comes online
        onpagehide -->	script -->	Triggers when the window is hidden
        onpageshow -->	script -->	Triggers when the window becomes visible
        onpause -->	script -->	Triggers when media data is paused
        onplay -->	script -->	Triggers when media data is going to start playing
        onplaying -->	script -->	Triggers when media data has start playing
        onpopstate -->	script -->	Triggers when the window's history changes
        onprogress -->	script -->	Triggers when the browser is fetching the media data
        onratechange -->	script -->	Triggers when the media data's playing rate has changed
        onreadystatechange -->	script -->	Triggers when the ready-state changes
        onredo -->	script -->	Triggers when the document performs a redo
        onresize -->	script -->	Triggers when the window is resized
        onscroll -->	script -->	Triggers when an element's scrollbar is being scrolled
        onseeked -->	script -->	Triggers when a media element's seeking attribute is no longer true, and the seeking has ended
        onseeking -->	script -->	Triggers when a media element's seeking attribute is true, and the seeking has begun
        onselect -->	script -->	Triggers when an element is selected
        onstalled -->	script -->	Triggers when there is an error in fetching media data
        onstorage -->	script -->	Triggers when a document loads
        onsubmit -->	script -->	Triggers when a form is submitted
        onsuspend -->	script -->	Triggers when the browser has been fetching media data, but stopped before the entire media file was fetched
        ontimeupdate -->	script -->	Triggers when media changes its playing position
        onundo -->	script -->	Triggers when a document performs an undo
        onunload -->	script -->	Triggers when the user leaves the document
        onvolumechange -->	script -->	Triggers when media changes the volume, also when volume is set to "mute"
        onwaiting -->	script -->	Triggers when media has stopped playing, but is expected to resume


HTML Forms :

    They are required to collect different kinds of user inputs, such as contact details like
    name, email address, phone numbers, or details like credit card information, etc.

    Forms contain special elements called controls like inputbox, checkboxes, radio-buttons,
    submit buttons, etc. Users generally complete a form by modifying its controls
    e.g. entering text, selecting items, etc. and submitting this form to a web server for processing.

HTML5 Canvas :

    The canvas element can be used to draw graphics on the webpage via scripting (usually JavaScript).
    The canvas was originally introduced by Apple for the Mac OS Dashboard widgets and to power graphics
    in the Safari web browser. Later it was adopted by the Firefox, Google Chrome and Opera. Now the
    canvas is a part of the new HTML5 specification for next generation web technologies.


HTML Video Tags :


        <video controls style="width:640px;height:360px;" poster="poster.png">
          <source src="devstories.webm"
                  type='video/webm;codecs="vp8, vorbis"' />
          <source src="devstories.mp4"
                  type='video/mp4;codecs="avc1.42E01E, mp4a.40.2"' />
          <track src="devstories-en.vtt" label="English subtitles"
                 kind="subtitles" srclang="en" default></track>
        </video>


################################################################################################################

HTML Tricks :

  https://websitesetup.org/wp-content/uploads/2014/02/HTML-CHEAT-SHEET.png

  https://hacks.mozilla.org/2016/08/a-few-html-tips/
